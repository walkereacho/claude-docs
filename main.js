/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var S=Object.create;var g=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var T=(t,o)=>{for(var e in o)g(t,e,{get:o[e],enumerable:!0})},P=(t,o,e,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of E(o))!A.call(t,s)&&s!==e&&g(t,s,{get:()=>o[s],enumerable:!(n=k(o,s))||n.enumerable});return t};var D=(t,o,e)=>(e=t!=null?S($(t)):{},P(o||!t||!t.__esModule?g(e,"default",{value:t,enumerable:!0}):e,t)),H=t=>P(g({},"__esModule",{value:!0}),t);var O={};T(O,{default:()=>b});module.exports=H(O);var i=require("obsidian");var x=require("child_process"),v=require("util"),w=D(require("path")),M=(0,v.promisify)(x.exec),m=class{static async executeCommand(o,e,n){var s;try{let r=`${o}. Please modify the file at: ${e}`.replace(/"/g,'\\"').replace(/\$/g,"\\$"),l=n.claudePath||"claude",d=n.claudeModel||"sonnet",h=`echo "${r}" | ${l} --model ${d} --permission-mode acceptEdits`;console.log("Executing Claude Code command:",h.substring(0,100)+"...");let{stdout:p,stderr:a}=await M(h,{encoding:"utf-8",cwd:w.dirname(e),env:{...process.env,PATH:n.customPath||"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"}});return a&&!a.includes("Warning")&&console.error("Claude Code stderr:",a),console.log("Claude Code execution completed"),{success:!0}}catch(c){return console.error("Claude Code execution error:",c),(s=c.message)!=null&&s.includes("command not found")?{success:!1,error:"Claude Code CLI not found. Please ensure it is installed and in your PATH."}:{success:!1,error:c.message||"Unknown error occurred"}}}};function N(){let t=process.env.HOME||"";return t?[`${t}/.bun/bin/claude`,`${t}/.local/bin/claude`,"/usr/local/bin/claude","claude"][0]:"claude"}function U(){let t=process.env.HOME||"",o="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin";return t?`${t}/.bun/bin:/opt/homebrew/bin:/opt/homebrew/sbin:${o}`:o}var B={claudePath:N(),customPath:U()},b=class extends i.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new C(this.app,this)),this.addCommand({id:"send-doc-to-claude-code",name:"Send doc to Claude Code",checkCallback:e=>{var s,c;let n=this.app.workspace.getActiveViewOfType(i.MarkdownView);if(n){if(!e){let r=n.file;if(!r)return new i.Notice("No active file found"),!1;let l=((c=(s=this.app.vault.adapter).getBasePath)==null?void 0:c.call(s))||this.app.vault.adapter.basePath||"",d=l?`${l}/${r.path}`:r.path;new f(this.app,async(h,p)=>{let a=new i.Notice(`\u{1F916} Claude Code (${p}) is working on your file...`,0);try{let u=await m.executeCommand(h,d,{...this.settings,claudeModel:p});a.hide(),u.success?new i.Notice("\u2705 Claude Code executed successfully! Check your file for changes.",5e3):new i.Notice(`\u274C Error: ${u.error||"Unknown error"}`,8e3)}catch(u){a.hide(),new i.Notice(`\u274C Unexpected error: ${u}`,8e3)}}).open()}return!0}}})}onunload(){}async loadSettings(){this.settings=Object.assign({},B,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},f=class extends i.Modal{constructor(e,n){super(e);this.model="sonnet";this.onSubmit=n}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:"Send to Claude Code"}),e.createEl("p",{text:"Enter your prompt for Claude Code. The current document will be included automatically."});let n=e.createDiv({attr:{style:"margin: 10px 0;"}});n.createEl("label",{text:"Model: ",attr:{style:"font-weight: bold; margin-right: 10px;"}});let s=n.createDiv({attr:{style:"display: inline-flex; gap: 5px;"}});[{value:"sonnet",label:"Sonnet"},{value:"opus",label:"Opus"},{value:"haiku",label:"Haiku"}].forEach(a=>{let u=s.createEl("button",{text:a.label,attr:{style:`padding: 5px 15px; ${this.model===a.value?"background-color: var(--interactive-accent); color: var(--text-on-accent);":"background-color: var(--background-secondary);"}`}});u.onclick=()=>{this.model=a.value,s.querySelectorAll("button").forEach(y=>{y.style.backgroundColor="var(--background-secondary)",y.style.color=""}),u.style.backgroundColor="var(--interactive-accent)",u.style.color="var(--text-on-accent)"}});let l=e.createDiv().createEl("textarea",{attr:{style:"width: 100%; height: 150px; margin: 10px 0;",placeholder:"e.g., Add a new section about TypeScript best practices..."}});l.focus();let d=e.createDiv({attr:{style:"display: flex; justify-content: flex-end; gap: 10px; margin-top: 10px;"}}),h=d.createEl("button",{text:"Cancel"});h.onclick=()=>{this.close()};let p=d.createEl("button",{text:"Send to Claude",attr:{style:"background-color: var(--interactive-accent); color: var(--text-on-accent);"}});p.onclick=()=>{let a=l.value.trim();a&&(this.result=a,this.close(),this.onSubmit(this.result,this.model))},l.addEventListener("keydown",a=>{a.key==="Enter"&&(a.metaKey||a.ctrlKey)&&p.click()})}onClose(){let{contentEl:e}=this;e.empty()}},C=class extends i.PluginSettingTab{constructor(e,n){super(e,n);this.plugin=n}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Claude Code Plugin Settings"}),new i.Setting(e).setName("Claude Path").setDesc(`Path to the Claude CLI executable. Use "claude" if it's in your PATH, or provide full path like "/Users/username/.bun/bin/claude"`).addText(n=>n.setPlaceholder("/path/to/claude").setValue(this.plugin.settings.claudePath).onChange(async s=>{this.plugin.settings.claudePath=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("System PATH").setDesc("Additional PATH directories for Claude to access tools like Node.js. Separate multiple paths with colons (:)").addTextArea(n=>n.setPlaceholder("/usr/local/bin:/usr/bin:/bin").setValue(this.plugin.settings.customPath).onChange(async s=>{this.plugin.settings.customPath=s,await this.plugin.saveSettings()})).addExtraButton(n=>n.setIcon("reset").setTooltip("Detect system PATH").onClick(async()=>{let s="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",c=process.env.HOME||"",r=c?`${c}/.bun/bin:/opt/homebrew/bin:/opt/homebrew/sbin:${s}`:s;this.plugin.settings.customPath=r,await this.plugin.saveSettings(),this.display()}))}};
